// 이번에는 CSS 설정을 해보겠습니다. 
//                             리액트에서 CSS를 사용하는 방법은 다양합니다. 
//                             일반적인 CSS 사용, module.css, CSS-in-JS, CSS 프레임워크 등을 사용하는 방법 등이 있습니다.
//                             우리는 scss를 통해 제작을 해보겠습니다. 여러가지 방법을 다 사용하면 좋겠지만, 저희는 가장 기본이되는 방법을 사용하고 기회가 된다면 다른 방법도 사용해보겠습니다.
                        
                        
//                             src에 assets 폴더는 다음과 같이 설정하겠습니다.
// // 출처: https://webstoryboy.co.kr/1967 [WEBSTORYBOY:티스토리]
// SASS는 Syntactically Awesome Style Sheets의 약자로, CSS의 확장된 문법을 제공하여 스타일 시트 작성을 더욱 효율적으로 만들어주는 CSS 전처리기입니다. 
//                                 SCSS는 일반 CSS와 호환되기 때문에 기존의 CSS 코드를 그대로 사용할 수 있습니다.
//                                 SCSS는 SASS의 다음 버전이며, 약간의 문법 차이가 있지만 SCSS가 좀 더 넓은 범용성과 CSS의 호환성의 장점을 가집니다. 
//                                 큰 차이점은 SASS는 중첩으로 들여 쓰기를 사용하고 속성 구분은 줄 바꿈을 이용하지만, 
//                                 SCSS의 경우 중괄호로 중첩을 표현하고 세미콜론으로 속성을 구분합니다. 
//                                 결론적으로 SCSS는 기존의 CSS 문법을 확장하여 보다 강력하고 유용한 기능을 제공하는 동시에, 웹 개발자가 스타일링 작업을 더 효율적으로 수행할 수 있도록 도와줍니다.
//                                 https://sass-lang.com/ 자세한 부분은 여기서 확인할 수 있습니다.
                            
                            
//                                 변수 (Variables): SCSS에서는 변수를 사용하여 색상, 글꼴, 간격 등을 정의하고 재사용할 수 있습니다. 이를 통해 일관된 디자인을 유지하고 스타일링 작업을 단순화할 수 있습니다.
//                                 중첩 (Nesting): SCSS에서는 선택자를 중첩하여 코드를 더 구조화하고 가독성을 높일 수 있습니다. 중첩된 구조를 사용하여 부모/자식 요소 관계를 명확하게 표현할 수 있습니다.
//                                 믹스인 (Mixins): 믹스인은 스타일의 모듈화를 가능하게 해주는 기능입니다. 반복적으로 사용되는 스타일 코드 블록을 함수처럼 정의하고 재사용할 수 있습니다.
//                                 확장 (Extend): 확장은 하나의 선택자에서 다른 선택자로 스타일을 상속할 수 있는 기능입니다. 이를 통해 스타일 규칙의 중복을 피하고 코드의 양을 줄일 수 있습니다.
//                                 연산 (Operations): SCSS는 수학 연산을 지원하여 값들을 계산하거나 조작할 수 있습니다. 이를 통해 여러 속성 값을 계산하여 사용하는 등의 작업이 가능합니다.
// // 출처: https://webstoryboy.co.kr/1967 [WEBSTORYBOY:티스토리]
// @charset "UTF-8"; : 이 부분은 문서의 문자 인코딩을 설정하는 것으로, 해당 SCSS 파일의 문자 인코딩이 UTF-8임을 나타냅니다.
//                                 @import "setting/fonts"; : 폰트 파일과 관련된 CSS를 설정합니다.
//                                 @import "setting/vars"; : 변수와 관련된 CSS를 설정합니다.
//                                 @import "setting/reset"; : 브라우저 스타일 초기화나 리셋 관련 CSS를 설정합니다.
//                                 @import "setting/mixin"; : 믹스인과 관련된 CSS를 설정합니다.
//                                 @import "setting/common"; : 공통적인 CSS 스타일을 설정합니다.
// 출처: https://webstoryboy.co.kr/1967 [WEBSTORYBOY:티스토리]
// UTF-8은 "Unicode Transformation Format - 8-bit"의 약자로, 
//                                 다양한 문자와 문자열을 컴퓨터에서 표현하기 위한 문자 인코딩 방식 중 하나입니다. 
//                                 Unicode는 전 세계의 모든 문자를 고유한 코드 포인트로 나타내는 국제 표준입니다. 
//                                 이를 컴퓨터에서 저장하고 전송하기 위해서는 효율적인 방식이 필요한데, 그 역할을 하는 것이 UTF-8입니다.
// 출처: https://webstoryboy.co.kr/1967 [WEBSTORYBOY:티스토리]
@charset "UTF-8";

// setting
@import "setting/fonts";
@import "setting/vars";
@import "setting/reset";
@import "setting/mixin";
@import "setting/common";

// section
@import "section/layout";
@import "section/header";
@import "section/search";
@import "section/today";
@import "section/developer";
@import "section/video";
@import "section/swiper";
@import "section/channel";